{"version":3,"file":"test-morse-tree.js","sourceRoot":"","sources":["../../src/tests/test-morse-tree.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from \"chai\";\n\nimport {\n    rotate, findPosition\n} from \"../morse-tree.js\";\n\nsuite(\"Morse\", () => {\n    test(\"rotate\", () => {\n        const tests: { dir: [number, number], turns: number, expected: [number, number]}[] = [\n            { dir: [0, -1], turns: 0, expected: [0, -1] },\n            { dir: [0, -1], turns: 1, expected: [-1, 0] },\n            { dir: [0, -1], turns: 2, expected: [0, 1] },\n            { dir: [0, -1], turns: 3, expected: [1, 0] },\n            { dir: [0, -1], turns: 4, expected: [0, -1] },\n            { dir: [0, 1], turns: 1, expected: [1, 0] },\n            { dir: [-1, 0], turns: 1, expected: [0, 1] },\n        ];\n\n        for (const { dir, turns, expected } of tests) {\n            const result = rotate(dir, turns);\n            // console.log(`${dir} ${turns} ${result} ${expected}`);\n            assert.equal(result[0], expected[0]);\n            assert.equal(result[1], expected[1]);\n        }\n    });\n\n    test(\"findPosition\", () => {\n        const tests: { morse: string, expected: [number, number] }[] = [\n            { morse: \"\", expected: [0, 0]},\n            { morse: \".\", expected: [-1, 0]},\n            { morse: \"-\", expected: [1, 0]},\n            { morse: \"..\", expected: [-1, 1]},\n            { morse: \".-\", expected: [-1, -1]},\n            { morse: \"-.\", expected: [1, -1]},\n            { morse: \"--\", expected: [1, 1]},\n        ];\n\n        for (const { morse, expected } of tests) {\n            const result = findPosition(morse);\n            assert.equal(result[0], expected[0]);\n            assert.equal(result[1], expected[1]);\n        }\n    });\n\n});\n"]}