{"version":3,"file":"cheat-sheet.js","sourceRoot":"","sources":["../src/cheat-sheet.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,aAAa,EAAE,MAAM,YAAY,CAAC;AAEvD,OAAO,EAAE,iBAAiB,EAAE,CAAC;AAE7B,SAAS,iBAAiB,CAAC,QAAoB;IAC7C,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC9C,KAAK,CAAC,SAAS,GAAG,aAAa,CAAC;IAChC,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;QACzB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC9B,GAAG,CAAC,UAAU,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;QACnC,GAAG,CAAC,UAAU,EAAE,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;KAC3D;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { MorseTable, htmlFromMorse } from './morse.js';\n\nexport { tableFromElements };\n\nfunction tableFromElements(elements: MorseTable): HTMLTableElement {\n  const table = document.createElement('table');\n  table.className = 'morse-table';\n  const ordered = Object.keys(elements).sort();\n  for (const key of ordered) {\n    const row = table.insertRow();\n    row.insertCell().textContent = key;\n    row.insertCell().innerHTML = htmlFromMorse(elements[key]);\n  }\n  return table;\n}\n"]}